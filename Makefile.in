# ************************************************************
# *  Makefile for the CLAIRE system.                         *
# *  UNIX version  - CLAIRE 3.3                              *
# *  Sylvain Benilan                                         *
# *  How to recompile entire claire from sources             *
# ************************************************************

all: public/ccmain.cl

# -------------------------------------------
# |      1. directories                      |
# -------------------------------------------

# directories
Dl = @SYSARCH@
Dst = stable2
Dh = include
Ds = csrc
Ds1 = csrc1
Dc = compile
Dr = release

SUFFIXE= .o .cpp .h .in .cl

#########################################
# first we need a stable claire version #
#########################################


./$(Dst)/claire:
	@echo --------------------
	@echo - ./$(Dst)/claire -
	@echo --------------------
	make -C $(Dst) -f stable.mk
	@echo -----------------------
	@echo - OK ./$(Dst)/claire -
	@echo -----------------------


##################################
# and we configure various files #
##################################


configure: configure.in unix_step2.cl.in tmpclaire.mk.in
	@echo -------------
	@echo - configure -
	@echo -------------
	rm -f config.*
	autoheader -I $(Dh)
	autoconf;
	./configure
	touch configure
	@echo ----------------
	@echo - OK configure -
	@echo ----------------



############################################################
# secondly we rebuild all the meta with our stable version #
# we generate here a tmpclaire1 binary                     #
############################################################


.claire_tmpclaire1: $(Dst)/claire upgrade.cl $(Dc)/*.cl configure $(Dh)/claire.h $(Dh)/marie.h $(Dh)/Kernel.h
	@echo ----------------------
	@echo - claire_tmpclaire1 $(Dst)  -
	@echo ----------------------
	time ./$(Dst)/claire -color -s 8 0 -n -f upgrade  -f step1.cl -q
	touch .claire_tmpclaire1
	@echo -------------------------
	@echo - OK claire_tmpclaire1  -
	@echo -------------------------

tmpclaire1: .claire_tmpclaire1
	@echo ---------------
	@echo - tmpclaire1  -
	@echo ---------------
	rm -f console/*.o
	rm -f kernel/*.o
	time make -j 4 -f tmpclaire.mk tmpclaire1
	@echo ------------------
	@echo - OK tmpclaire1  -
	@echo ------------------


###########################################################################
# thirdly we rebuild all meta with the updated compiler (i.e. tmpclaire1) #
# and we generate a tmpclaire2 binary                                     #
###########################################################################


.claire_tmpclaire2: tmpclaire1 meta/*.cl step2.cl version.cl
	@echo --------------
	@echo - tmpclaire2 -
	@echo --------------
	time ./tmpclaire1 -color -s 8 0 -n -f unix_step2.cl -f step2.cl -q
	touch .claire_tmpclaire2
	@echo -----------------
	@echo - OK tmpclaire2 -
	@echo -----------------

tmpclaire2: .claire_tmpclaire2 console/clConsole.cpp kernel/*.cpp
	@echo --------------
	@echo - tmpclaire2 -
	@echo --------------
	rm -f console/*.o
	rm -f kernel/*.o
	time make -j 4 -f tmpclaire.mk tmpclaire2
	@echo -----------------
	@echo - OK tmpclaire2 -
	@echo -----------------


$(Dr)/configure: $(Dr)/configure.in.unix
	autoheader -I $(Dh) $(Dr)/configure.in.unix
	autoconf -o $(Dr)/configure $(Dr)/configure.in.unix


#####################################
# How to create a public xl version #
#####################################

public/ccmain.cl: docs/index.html ./tmpclaire2 $(Dr)/ccmain.cl $(Dr)/configure $(Dr)/Makefile.in.unix $(Dr)/Makefile.in.mvs $(Dr)/init.cl $(Dr)/Makefile.nt
	@echo -------
	@echo - pub -
	@echo -------
	mkdir -p public
	rm -drf public/*
	mkdir -p public/$(Ds)
	cp -R meta public
	rm -drf public/meta/CVS
	rm -drf public/meta/.svn
	cp -R $(Dh) public
	cp -R docs public
	rm -drf public/docs/CVS
	rm -drf public/docs/.svn
	rm -f public/$(Dh)/config.h
	rm -f public/$(Dh)/acconfig.h
	rm -drf public/$(Dh)/CVS
	rm -drf public/$(Dh)/.svn
	cp -R $(Ds) public
	rm public/$(Ds)/*.o
	cp kernel/*.cpp public/$(Ds)
	cp $(Dr)/Makefile.in.unix public/Makefile.unix.in
	cp $(Dr)/Makefile.in.mvs public/Makefile.mvs.in
	cp $(Dr)/configure public
	cp $(Dr)/init.cl public
	cp console/*.cpp public/$(Ds)
	cp $(Dr)/install.cl public
	cp $(Dr)/README.txt public
	cp $(Ds)/Optimize.cpp public/$(Ds)/Optimize.cpp.in
	cp $(Ds)/Generate.cpp public/$(Ds)/Generate.cpp.in
	mv public/$(Ds)/claire-s.cpp public/$(Ds)/sclaire-s.cpp
	cp $(Dr)/Makefile.nt public/Makefile.nt
	cp $(Dr)/ccmain.cl public
	rm -drf xlclaire-`./tmpclaire2 -eval 'printf("v~A",$(Dr)())' -q`
	cp -R public xlclaire-`./tmpclaire2 -eval 'printf("v~A",$(Dr)())' -q`
	tar -czf xlclaire-`./tmpclaire2 -eval 'printf("v~A",$(Dr)())' -q`.tgz \
		xlclaire-`./tmpclaire2 -eval 'printf("v~A",$(Dr)())' -q`
	./cleantar.pl xlclaire-`./tmpclaire2 -eval 'printf("v~A",$(Dr)())' -q`.tgz
	@echo ----------
	@echo - OK pub -
	@echo ----------


docs/index.html: tmpclaire2 meta/*.cl
	./tmpclaire2 -s 8 0 -apidoc claire -q
	cp docs/claire.html docs/index.html


a:
	touch upgrade.cl
	make

aa:
	touch configure.in
	make a

d:
	make
	cp $(Dr)/Makefile.in.unix.debug xlclaire-`./tmpclaire2 -eval 'printf("v~A",$(Dr)())' -q`/Makefile.in
	cp $(Dr)/init.cl.debug xlclaire-`./tmpclaire2 -eval 'printf("v~A",$(Dr)())' -q`/init.cl
	tar -czf xlclaire-`./tmpclaire2 -eval 'printf("v~A",$(Dr)())' -q`.tgz xlclaire-`./tmpclaire2 -eval 'printf("v~A",$(Dr)())' -q`


install: d
	cp kernel/*.o xlclaire-`./tmpclaire2 -eval 'printf("v~A",release())' -q`/$(Ds)
	cp console/*.o xlclaire-`./tmpclaire2 -eval 'printf("v~A",release())' -q`/$(Ds)
	cp $(Ds)/*.o xlclaire-`./tmpclaire2 -eval 'printf("v~A",release())' -q`/$(Ds)
	./tmpclaire2 \
			-chdir xlclaire-`./tmpclaire2 -eval 'printf("v~A",release())' -q` \
			-eval 'shell("./configure")' -q
	make -C xlclaire-`./tmpclaire2 -eval 'printf("v~A",release())' -q`
	sudo make -C xlclaire-`./tmpclaire2 -eval 'printf("v~A",release())' -q` install


moduled:
	claire -s 8 0 -v 2 -chdir ../modules -D -call -sudo -ov -publish

module:
	claire -s 8 0 -v 2 -chdir ../modules -O -os 5 -call -sudo -ov -publish
	

ad:
	make a
	make d


h:
	@echo "---- Claire Makefile ----"
	@echo "Usage : make [aa | a | d | ad | install]"
	@echo "This makefile builds a public claire tgz archive"
	@echo "Options :"
	@echo "  aa - rebuild all including configured files"
	@echo "  ad - rebuild all source files and produce an archive ready for debug"
	@echo "  a  - rebuild all source files"
	@echo "  d  - build source files and produce an archive ready for debug"
	@echo "  install - fast install of claire with the current debug tmpclaire2"



################################################################
# How to commit the public xl version as the new stable claire #
#  (the next 'make' will generate a new stable claire)         #
################################################################


commit_stable:
	@echo -----------------
	@echo - commit_stable -
	@echo -----------------
	rm -f $(Dst)/$(Dh)/*.h
	rm -f $(Dst)/$(Dh)/*.h.in
	rm -f $(Dst)/$(Ds)/*.o
	rm -f $(Dst)/$(Ds)/*.cpp
	rm -f $(Dst)/$(Ds)/*.cpp.in
	cp $(Dh)/*.h $(Dst)/$(Dh)
	cp $(Dh)/*.h.in $(Dst)/$(Dh)
	cp $(Ds)/*.cpp $(Dst)/$(Ds)
	cp kernel/*.cpp $(Dst)/$(Ds)
	cp console/*.cpp $(Dst)/$(Ds)
	mv $(Dst)/$(Ds)/Optimize.cpp $(Dst)/$(Ds)/Optimize.cpp.in
	mv $(Dst)/$(Ds)/gusage.cpp $(Dst)/$(Ds)/gusage.cpp.in
	mv $(Dst)/$(Ds)/claire-s.cpp $(Dst)/$(Ds)/sclaire-s.cpp
	cp $(Dr)/Makefile.in.unix $(Dst)/Makefile.in
	cp $(Dr)/configure $(Dst)
	cp $(Dr)/init.cl $(Dst)
	cp $(Dr)/ccmain.cl $(Dst)
	rm -f $(Dst)/sclaire
	rm -f $(Dst)/cclaire
	@echo --------------------
	@echo - OK commit_stable -
	@echo --------------------


clean:
	@echo ---------
	@echo - clean -
	@echo ---------
	rm -rf autom4te.cache
	rm -f config.*
	rm -f configure
	rm -f $(Ds)/*.o
	rm -f $(Ds)/*.obj
	rm -f $(Ds1)/*.o
	rm -f $(Ds1)/*.obj
	rm -f $(Dst)/$(Ds)/*.o
	rm -f $(Dst)/$(Ds1)/*.obj
	rm -rf $(Dst)/lib
	rm -rf $(Dst)/sclaire*
	rm -rf $(Dst)/sclaire
	rm -rf $(Dst)/cclaire*
	rm -rf $(Dst)/cclaire
	rm -rf $(Dst)/sclaire.mk
	rm -f $(Dst)/Makefile
	rm -f $(Dst)/config.*
	rm -f $(Dst)/claire
	rm -rf $(Dst)/$(Dl)
	rm -f $(Dh)/config.h
	rm -f $(Dh)/config.h.in~
	rm -f $(Dh)/Core.h
	rm -f $(Dh)/Reader.h
	rm -f $(Dh)/Language.h
	rm -f $(Dh)/Optimize.h
	rm -f $(Dh)/Generate.h
	rm -f $(Dh)/Serialize.h
	rm -f $(Dh)/Serialize.h
	rm -f last_claire.*
	rm -rf public
	rm -f tmpclaire.mk
	rm -f tmpclaire1
	rm -f tmpclaire2
	rm -f unix_step2.cl
	rm -rf $(Ds)/*
	rm -rf $(Ds1)/*
	rm -rf xlclaire-*
	rm -rf doc
	rm -rf docs
	rm -f $(Dr)/configure
	rm -f Makefile
	find . -name "*.o" -exec rm -f {} \;
	@echo ------------
	@echo - OK clean -
	@echo ------------
	
