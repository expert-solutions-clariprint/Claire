/***********************************************************************/
/**   microCLAIRE                                       Yves Caseau    */
/**  Copyright (C) 1998-00 Yves Caseau. All Rights Reserved.           */
/***********************************************************************/

The microCLAIRE library is made of two modules. The Kernel module is written in C++
and the Core module is written in CLAIRE and compiled into C++.

this directory contains the C++ code for the Kernel module of microCLAIRE v3.3.


clAlloc.cpp   contains the ClaireAlloc class that encapsulates all alloc/gc services
              We use do not use C++ new and delete, so that we can allocate everything
              with a same reference address (&Cmemory[0]) which is necessary for OIDs.
             

clBag.cpp     contains the bag class and its 3 subclasses: array, list and set
              

clEnv.cpp     contains the environment classes:
                 ClaireRes manages worlds and symbols (+ ClaireSymbol)
                 ClaireEnv class that manages the eval and exception stacks
              

clString.cpp  contains the imported objects (Strings, Floats, int, char,...)
              

clPort.cpp    contains the ClairePort class and its subclasses
              

clReflect.cpp contains the reflective class for classes (ClaireClass) and properties
              


Kernel.cpp    contains the reflective description (claireClasses) of the Kernel module
              this file is equivalent to the module description that is generated by the
              compiler


Additionnaly in the XL version we find:


clSystem.cpp  contains more general system dependent api

